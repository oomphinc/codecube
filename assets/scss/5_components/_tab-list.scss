// <nav class="tabs__nav u__px" role="tablist" aria-label="Primary">
//  <button class="tabs__nav--new u__btn-reset" role="tab" aria-selected="true" aria-controls="pane-new" id="new">
//    <span class="tabs__nav--new__button" aria-hidden="true">+</span>
//    <span class="u__sr-only">New</span>
//  </button>
//   <button class="u__btn-reset" role="tab" aria-selected="true" aria-controls="pane-ratio" id="ratio">Ratios</button>
//   <button class="u__btn-reset" role="tab" aria-selected="false" aria-controls="pane-history" id="history">History</button>
//   <button class="u__btn-reset" role="tab" aria-selected="false" aria-controls="pane-settings" id="settings">Settings</button>
//   <button class="u__btn-reset" role="tab" aria-selected="false" aria-controls="pane-howto" id="howto">How To</button>
// </nav>

// Specific Tab panes
// Using the IDs that we need to use for accessibility
#pane-addnew,
#pane-history,
#pane-settings,
#pane-howto {
  margin: 0 auto;
  max-width: $maxwidth-text;
}

#pane-ratio {
  margin: 0 auto;
  max-width: $maxwidth-container;
}

.tabs {
  position: relative;
  min-height: 100vh;
  min-height: -webkit-fill-available;

  &__nav {
    background-color: var(--theme__bg--navs);
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-flow: row nowrap;
    padding: 0 var(--spacer__y--fluid);

    @include breakpoint-down(medium) {
      position: fixed;
      bottom: 0;
      z-index: 99;
      width: 100vw;
    }

    @include breakpoint-up(base) {
      justify-content: space-around;
    }

    @include breakpoint-up(medium) {
      background-color: transparent;
      margin-top: - em(60);
      margin-left: auto;
      padding: 0;
      width: min-content;
    }

    button {
      border-top: 3px solid transparent;
      border-bottom: 3px solid transparent;
      color: var(--theme__fg);
      line-height: 1;
      padding: 1.25em 0;

      @include breakpoint-up(medium) {
        padding: 1.25em var(--spacer__y--fluid);
        white-space: nowrap;
      }

      &[aria-selected="true"] {
        border-top-color: var(--theme__fg--accent);
        color: var(--theme__link--accent);

        @include breakpoint-up(medium) {
          background-color: var(--theme__bg);
          border-bottom: none;
        }
      }

      &:hover {
        color: var(--theme__link--accent);
      }

      // Prevent click handlers from being captured by nested elements
      > * {
        pointer-events: none;
        vertical-align: middle;
      }
    }

    &--new {
      &__icon {
        background-color: var(--theme__link);
        border-top-color: var(--theme__bg--navs);
        border-bottom-color: var(--theme__bg--navs);
        color: var(--theme__bg);
        font-size: 125%;
        padding: 0.5em 0.75em;
        margin: 0 0.25em;

        @include breakpoint-up(medium) {
          border-radius: 3px;
          padding: 0.25em 0.5em 0.1875em ;
        }
      }

      &__text {
        @include breakpoint-down(base) {
          display: none;
        }
      }

      &[aria-selected="true"] {
        border-top-color: var(--theme__bg--navs) !important;

        .tabs__nav--new__icon {
          background-color: var(--theme__fg);
          color: var(--theme__bg);
        }
      }
    }
  }

  &__pane {
    overflow: hidden;

    @media (hover: hover) {
      &:focus {
        outline: none;
      }
    }

    &[aria-hidden="true"] {
      // Visually hide element, leave accessible to JS
      // In this instance, though we are using the sr-only mixin,
      // the intent is to also hide from screen readers
      @include sr-only;
    }

    &__title {
      margin: 1.5rem 0 1.5em;
      text-align: center;
    }
  }
}

.oomph-logo {
  float: left;
  margin-right: 0.75em;

  @include breakpoint-down(medium) {
    width: em(42);
  }
}
